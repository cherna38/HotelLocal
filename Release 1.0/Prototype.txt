Working Prototype Known Problems Report
Hotel Local
12-2-18

Known bugs
1. Home page is scrollable when it shouldn't be.
  Page is set to be length of background image, and table when table surpasses that length, (picture zooms in to meet end of page).
  The location is likely in the public/css/main.css page, as this appears to be more of a design problem.

2. Table will on rare occasion print twice, (not always or even frequently, but does happen).
  Occurs with any sort of search submission, (so really any filtering button, search button, ENTER).
  Fault appears to lie with the printing function. Likely some small feature overlooked in hotelLoop, (public/script.js).
  Best chance of removing error would seem to be debugging, using the console logging feature on the web browser. This appears to 
  occur only when a button (filtering/search/ENTER) is double-clicked.

3. Index.html page takes a while to load.
  After some searching, it seems the problem lies with public/index.html itself.
  Due to its length, with comments and whitespace, it takes a good amount of time to fully process.
  
4. (Not sure if it qualifies as a bug) Price filtering and rate sorting (high to low) cannot occur simultaneously.
  In public/script.js, the price filtering is called with .where() call onto the hotel query. Once here, the input to .where() is a 
  range for a single attribute. Once the range is found, the query is then ordered by that attribute, relative to the range.
  As such, the query is sorted by price from lowest to whichever value is the filter. Therefore, it cannot also be sorted by rating.
  A workaround to this type of issue is denormalization (encouraged by Firebase to avoid overly complex queries in code). However, 
  that would prove a bit tedious given the amount of data needed to be duplicated.
  
5. If table is too large, the logo and search bar will be shifted up to the top of the screen. So, for particular inputs, the logo may 
  be shifted up to the nav bar.

User Stories for acceptance tests
1. Sprint 1 - User Story 1: Want to be able to search for hotels
2. Sprint 2 - User Story 3: Want a detailed, more interactive site
3. Sprint 3 - User Story 1: Search for hotels given location
4. Sprint 3 - User Story 2: Filter/sort through hotels with different options
5. Sprint 4 - User Story 1: Find basic information for hotels in more readable format
6. Sprint 4 - User Story 2: More variety to filtering options, allow some simultaneous filtering
